## Based on https://github.com/minhhungit/mongodb-cluster-docker-compose and https://github.com/chefsplate/mongo-shard-docker-compose

version: '3'
services:

## Router
  router01:
    image: "mongo:${MONGO_TAG:-latest}"
    container_name: router-01
    command: mongos --port 27017 --configdb rs-config-server/configsvr01:27017,configsvr02:27017,configsvr03:27017 --bind_ip_all
    restart: always
    healthcheck:
      test: [ "CMD", "mongo", "--quiet", "--eval", "db.runCommand(\"ping\").ok" ]
    ports:
      - "27217:27017"
    volumes:
      - ./scripts:/scripts
  router02:
    image: "mongo:${MONGO_TAG:-latest}"
    container_name: router-02
    command: mongos --port 27017 --configdb rs-config-server/configsvr01:27017,configsvr02:27017,configsvr03:27017 --bind_ip_all
    restart: always
    healthcheck:
      test: [ "CMD", "mongo", "--quiet", "--eval", "db.runCommand(\"ping\").ok" ]
    volumes:
      - ./scripts:/scripts
    ports:
      - "27218:27017"
    links:
      - router01

## Config Servers
  configsvr01:
    image: "mongo:${MONGO_TAG:-latest}"
    container_name: mongo-config-01 
    command: mongod --port 27017 --configsvr --replSet rs-config-server
    restart: always
    healthcheck:
      test: [ "CMD", "mongo", "--quiet", "--eval", "db.runCommand(\"ping\").ok" ]
    volumes:
      - ./scripts:/scripts 
    ports:
      - "27219:27017"
    links:
      - shard01-a
      - shard02-a
      - shard03-a
  configsvr02:
    image: "mongo:${MONGO_TAG:-latest}"
    container_name: mongo-config-02 
    command: mongod --port 27017 --configsvr --replSet rs-config-server
    restart: always
    healthcheck:
      test: [ "CMD", "mongo", "--quiet", "--eval", "db.runCommand(\"ping\").ok" ]
    volumes:
      - ./scripts:/scripts
    ports:
      - "27220:27017"
    links:
      - configsvr01
  configsvr03:
    image: "mongo:${MONGO_TAG:-latest}"
    container_name: mongo-config-03 
    command: mongod --port 27017 --configsvr --replSet rs-config-server
    restart: always
    healthcheck:
      test: [ "CMD", "mongo", "--quiet", "--eval", "db.runCommand(\"ping\").ok" ]
    volumes:
      - ./scripts:/scripts
    ports:
      - "27221:27017"
    links:
      - configsvr02

## Shards
  ## Shards 01
   
  shard01-a:
    image: "mongo:${MONGO_TAG:-latest}"
    container_name: shard-01-node-a
    command: mongod --port 27017 --shardsvr --replSet rs-shard-01
    restart: always
    healthcheck:
      test: [ "CMD", "mongo", "--quiet", "--eval", "db.runCommand(\"ping\").ok" ]
    volumes:
      - ./scripts:/scripts
    ports:
      - "27222:27017"
    links:
      - shard01-b
      - shard01-c
  shard01-b:
    image: "mongo:${MONGO_TAG:-latest}"
    container_name: shard-01-node-b
    command: mongod --port 27017 --shardsvr --replSet rs-shard-01
    restart: always
    healthcheck:
      test: [ "CMD", "mongo", "--quiet", "--eval", "db.runCommand(\"ping\").ok" ]
    volumes:
      - ./scripts:/scripts
    ports:
      - "27223:27017"
  shard01-c:
    image: "mongo:${MONGO_TAG:-latest}"
    container_name: shard-01-node-c
    command: mongod --port 27017 --shardsvr --replSet rs-shard-01
    restart: always
    healthcheck:
      test: [ "CMD", "mongo", "--quiet", "--eval", "db.runCommand(\"ping\").ok" ]
    volumes:
      - ./scripts:/scripts
    ports:
      - "27224:27017"

  ## Shards 02
  shard02-a:
    image: "mongo:${MONGO_TAG:-latest}"
    container_name: shard-02-node-a
    command: mongod --port 27017 --shardsvr --replSet rs-shard-02
    restart: always
    healthcheck:
      test: [ "CMD", "mongo", "--quiet", "--eval", "db.runCommand(\"ping\").ok" ]
    volumes:
      - ./scripts:/scripts
    ports:
      - "27225:27017"
    links:
      - shard02-b
      - shard02-c
  shard02-b:
    image: "mongo:${MONGO_TAG:-latest}"
    container_name: shard-02-node-b
    command: mongod --port 27017 --shardsvr --replSet rs-shard-02
    restart: always
    healthcheck:
      test: [ "CMD", "mongo", "--quiet", "--eval", "db.runCommand(\"ping\").ok" ]
    volumes:
      - ./scripts:/scripts
    ports:
      - "27226:27017"
  shard02-c:
    image: "mongo:${MONGO_TAG:-latest}"
    container_name: shard-02-node-c
    command: mongod --port 27017 --shardsvr --replSet rs-shard-02
    restart: always
    healthcheck:
      test: [ "CMD", "mongo", "--quiet", "--eval", "db.runCommand(\"ping\").ok" ]
    volumes:
      - ./scripts:/scripts
    ports:
      - "27227:27017"

  ## Shards 03
  shard03-a:
    image: "mongo:${MONGO_TAG:-latest}"
    container_name: shard-03-node-a
    command: mongod --port 27017 --shardsvr --replSet rs-shard-03
    restart: always
    healthcheck:
      test: [ "CMD", "mongo", "--quiet", "--eval", "db.runCommand(\"ping\").ok" ]
    volumes:
      - ./scripts:/scripts
    ports:
      - "27228:27017"
    links:
      - shard03-b
      - shard03-c
  shard03-b:
    image: "mongo:${MONGO_TAG:-latest}"
    container_name: shard-03-node-b
    command: mongod --port 27017 --shardsvr --replSet rs-shard-03
    restart: always
    healthcheck:
      test: [ "CMD", "mongo", "--quiet", "--eval", "db.runCommand(\"ping\").ok" ]
    volumes:
      - ./scripts:/scripts
    ports:
      - "27229:27017"
  shard03-c:
    image: "mongo:${MONGO_TAG:-latest}"
    container_name: shard-03-node-c
    command: mongod --port 27017 --shardsvr --replSet rs-shard-03
    restart: always
    healthcheck:
      test: [ "CMD", "mongo", "--quiet", "--eval", "db.runCommand(\"ping\").ok" ]
    volumes:
      - ./scripts:/scripts
    ports:
      - "27230:27017"
  
## MongoDb source as standalone
  standalone:
    image: "mongo:${MONGO_TAG:-latest}"
    container_name: mongodb-source
    restart: always
    healthcheck:
      test: [ "CMD", "mongo", "--quiet", "--eval", "db.runCommand(\"ping\").ok" ]
    ports:
      - "27231:27017"